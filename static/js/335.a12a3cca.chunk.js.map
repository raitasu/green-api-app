{"version":3,"file":"static/js/335.a12a3cca.chunk.js","mappings":"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","sources":["api/api.js","common/images/whatsAppIcon.js","components/Login.js","utils/constants.js"],"sourcesContent":["import axios from \"axios\";\nimport {url} from \"../utils/constants\";\n\nexport const auth = (IdInstance, ApiTokenInstance) => {\n    return axios.get(`${url}/waInstance${IdInstance}/getSettings/${ApiTokenInstance}`, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    })\n        .then((response) => {\n            return response.data;\n        })\n        .catch((error) => {\n            throw error;\n        });\n};\n\nexport const sendMessage = ({\n                                idInstance,\n                                apiTokenInstance,\n                                chatId,\n                                message,\n                            }) => {\n    return axios\n        .post(\n            `${url}/waInstance${idInstance}/SendMessage/${apiTokenInstance}`,\n            {chatId, message},\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        )\n        .then((response) => response.data)\n        .catch((error) => {\n            console.error(error);\n            throw new Error(error);\n        });\n};\n\nexport const receiveNotification = ({\n                                        idInstance,\n                                        apiTokenInstance,\n                                    }) => {\n    return axios\n        .get(\n            `${url}/waInstance${idInstance}/ReceiveNotification/${apiTokenInstance}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        )\n        .then((response) => response.data)\n        .catch((error) => {\n            console.error(error);\n            if (error.response && error.response.status === 400) {\n                throw new Error(error);\n            }\n            throw new Error(error);\n        });\n};\n\nexport const deleteNotification = ({\n                                       idInstance,\n                                       apiTokenInstance,\n                                       receiptId,\n                                   }) => {\n    return axios\n        .delete(\n            `${url}/waInstance${idInstance}/DeleteNotification/${apiTokenInstance}/${receiptId}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        )\n        .then((response) => response.data)\n        .catch((error) => {\n            console.error(error);\n            if (error.response && error.response.status === 400) {\n                throw new Error(error);\n            }\n            throw new Error(error);\n        });\n};\n\nexport const getSettings = ({\n                                idInstance,\n                                apiTokenInstance,\n                            }) => {\n    return axios\n        .get(\n            `${url}/waInstance${idInstance}/GetSettings/${apiTokenInstance}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        )\n        .then((response) => response.data)\n        .catch((error) => {\n            console.error(error);\n            if (error.response && error.response.status === 400) {\n                throw new Error(error);\n            }\n            throw new Error(error);\n        });\n};\n\nexport const setSettings = ({\n                                idInstance,\n                                apiTokenInstance,\n                                incomingWebhook,\n                                outgoingWebhook,\n                            }) => {\n    return axios\n        .post(\n            `${url}/waInstance${idInstance}/SetSettings/${apiTokenInstance}`,\n            {incomingWebhook, outgoingWebhook},\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        )\n        .then((response) => response.data)\n        .catch((error) => {\n            console.error(error);\n            throw new Error(error);\n        });\n};\n","export const WhatsAppIcon = () => {\n    return <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"39\" height=\"39\" viewBox=\"0 0 39 39\">\n        <path fill=\"#00E676\"\n              d=\"M10.7 32.8l.6.3c2.5 1.5 5.3 2.2 8.1 2.2 8.8 0 16-7.2 16-16 0-4.2-1.7-8.3-4.7-11.3s-7-4.7-11.3-4.7c-8.8 0-16 7.2-15.9 16.1 0 3 .9 5.9 2.4 8.4l.4.6-1.6 5.9 6-1.5z\"></path>\n        <path fill=\"#FFF\"\n              d=\"M32.4 6.4C29 2.9 24.3 1 19.5 1 9.3 1 1.1 9.3 1.2 19.4c0 3.2.9 6.3 2.4 9.1L1 38l9.7-2.5c2.7 1.5 5.7 2.2 8.7 2.2 10.1 0 18.3-8.3 18.3-18.4 0-4.9-1.9-9.5-5.3-12.9zM19.5 34.6c-2.7 0-5.4-.7-7.7-2.1l-.6-.3-5.8 1.5L6.9 28l-.4-.6c-4.4-7.1-2.3-16.5 4.9-20.9s16.5-2.3 20.9 4.9 2.3 16.5-4.9 20.9c-2.3 1.5-5.1 2.3-7.9 2.3zm8.8-11.1l-1.1-.5s-1.6-.7-2.6-1.2c-.1 0-.2-.1-.3-.1-.3 0-.5.1-.7.2 0 0-.1.1-1.5 1.7-.1.2-.3.3-.5.3h-.1c-.1 0-.3-.1-.4-.2l-.5-.2c-1.1-.5-2.1-1.1-2.9-1.9-.2-.2-.5-.4-.7-.6-.7-.7-1.4-1.5-1.9-2.4l-.1-.2c-.1-.1-.1-.2-.2-.4 0-.2 0-.4.1-.5 0 0 .4-.5.7-.8.2-.2.3-.5.5-.7.2-.3.3-.7.2-1-.1-.5-1.3-3.2-1.6-3.8-.2-.3-.4-.4-.7-.5h-1.1c-.2 0-.4.1-.6.1l-.1.1c-.2.1-.4.3-.6.4-.2.2-.3.4-.5.6-.7.9-1.1 2-1.1 3.1 0 .8.2 1.6.5 2.3l.1.3c.9 1.9 2.1 3.6 3.7 5.1l.4.4c.3.3.6.5.8.8 2.1 1.8 4.5 3.1 7.2 3.8.3.1.7.1 1 .2h1c.5 0 1.1-.2 1.5-.4.3-.2.5-.2.7-.4l.2-.2c.2-.2.4-.3.6-.5s.4-.4.5-.6c.2-.4.3-.9.4-1.4v-.7s-.1-.1-.3-.2z\"></path>\n    </svg>\n}","import React, {useEffect, useState} from 'react';\nimport {Box, Button, Flex, Input, Text} from \"@chakra-ui/react\";\nimport {WhatsAppIcon} from \"../common/images/whatsAppIcon\";\nimport {useForm} from \"react-hook-form\";\nimport {auth} from \"../api/api\";\nimport {useNavigate} from \"react-router-dom\";\n\nexport const Login = () => {\n    const {register, handleSubmit, formState: {errors}} = useForm();\n\n    const [error, serError] = useState(null);\n    const navigate = useNavigate();\n    useEffect(() => {\n        const IdInstance = localStorage.getItem('IdInstance');\n        const ApiTokenInstance = localStorage.getItem('ApiTokenInstance');\n        if (IdInstance && ApiTokenInstance) {\n            auth(IdInstance, ApiTokenInstance)\n                .then((res) => {\n                    if (res) {\n                        serError(null);\n                        navigate('/green-api-app/main')\n                    }\n                })\n                .catch((error) => {\n                    serError(error)\n                    console.error(error);\n                });\n        }\n    }, []);\n\n    const onSubmit = (IdInstance, ApiTokenInstance) => {\n        auth(IdInstance, ApiTokenInstance)\n            .then((res) => {\n                if (res) {\n                    serError(null);\n                    localStorage.setItem('IdInstance', IdInstance);\n                    localStorage.setItem('ApiTokenInstance', ApiTokenInstance);\n                    navigate('/main')\n                }\n            })\n            .catch((error) => {\n                serError(error)\n                console.error(error);\n            });\n    };\n\n\n    const handleFormSubmit = (data) => {\n        const {idInstance, apiTokenInstance} = data;\n        onSubmit(idInstance, apiTokenInstance);\n    };\n\n    return (\n        <Box\n            height=\"100vh\"\n            backgroundImage=\"linear-gradient(to bottom, #00a884 20%, #eae6df 20%)\"\n        >\n            <Box position='absolute' margin='60px 0 0 560px'>\n                <Flex alignItems='center'>\n                    <WhatsAppIcon/>\n                    <Text color='white' marginLeft='12px'>Green API WhatsApp</Text>\n                </Flex>\n            </Box>\n            <Flex\n                height=\"100%\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Box\n                    width=\"800px\"\n                    height=\"700px\"\n                    padding=\"4\"\n                    backgroundColor=\"white\"\n                    borderRadius=\"md\"\n                    margin=\"auto\"\n                    boxShadow=\"0px 0px 4px gray\"\n                >\n                    <Flex\n                        direction=\"column\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                        height=\"100%\"\n                        gap=\"40px\"\n                    >\n                        <Box marginBottom=\"4\">\n                            <Text fontSize=\"20px\" fontWeight=\"bold\">\n                                Sign in to your account green API\n                            </Text>\n                        </Box>\n                        <form onSubmit={handleSubmit(handleFormSubmit)}>\n                            <Box height='80px'>\n                                <Input\n                                    focusBorderColor=\"#00a884\"\n                                    variant=\"flushed\"\n                                    placeholder=\"Enter your idInstance\"\n                                    marginBottom=\"4\"\n                                    {...register(\"idInstance\", {required: true})}\n                                />\n                                {errors.idInstance ? (\n                                    <Text color=\"red\">This field is required</Text>\n                                ) : error ? <Text color=\"red\">Please enter valid values</Text> : ''}\n                            </Box>\n                            <Box height='80px'>\n                                <Input\n                                    focusBorderColor=\"#00a884\"\n                                    variant=\"flushed\"\n                                    placeholder=\"Enter your ApiTokenInstance\"\n                                    marginBottom=\"4\"\n                                    {...register(\"apiTokenInstance\", {required: true})}\n                                />\n                                {errors.apiTokenInstance ? (\n                                    <Text color=\"red\">This field is required</Text>\n                                ) : error ? <Text color=\"red\">Please enter valid values</Text> : ''}\n                            </Box>\n\n                            <Button\n                                type=\"submit\"\n                                width=\"180px\"\n                                height=\"40px\"\n                                bg=\"#00a884\"\n                                borderRadius=\"3px\"\n                                _hover={{bg: \"#008f70\"}}\n                                _active={{boxShadow: \"0px 0px 8px gray\"}}\n                            >\n                                Log In\n                            </Button>\n                        </form>\n                    </Flex>\n                </Box>\n            </Flex>\n        </Box>\n    );\n};\n","export const url = 'https://api.green-api.com'"],"names":["auth","IdInstance","ApiTokenInstance","axios","concat","url","headers","then","response","data","catch","error","sendMessage","_ref","idInstance","apiTokenInstance","chatId","message","console","Error","receiveNotification","_ref2","status","deleteNotification","_ref3","receiptId","WhatsAppIcon","_jsxs","xmlns","width","height","viewBox","children","_jsx","fill","d","Login","_useForm","useForm","register","handleSubmit","errors","formState","_useState","useState","_useState2","_slicedToArray","serError","navigate","useNavigate","useEffect","localStorage","getItem","res","Box","backgroundImage","position","margin","Flex","alignItems","Text","color","marginLeft","justifyContent","padding","backgroundColor","borderRadius","boxShadow","direction","gap","marginBottom","fontSize","fontWeight","onSubmit","setItem","Input","_objectSpread","focusBorderColor","variant","placeholder","required","Button","type","bg","_hover","_active"],"sourceRoot":""}